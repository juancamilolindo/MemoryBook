steps:

    
  # 1. Construir la etapa 'builder' del Dockerfile.
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build Builder Stage for Tests'
    args:
      - 'build'
      - '-t'
      - 'my-backend-builder:latest'
      - '.'
      - '--target'
      - 'builder'
    dir: 'backend'

  # 2. Ejecutar el linter (Ruff)
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Run Linter'
    args:
      - 'run'
      - '--rm'
      - 'my-backend-builder:latest'
      - 'sh'
      - '-c'
      - 'ruff check . && ruff format --check .'
    dir: 'backend'

  # DEBUG: Listar paquetes instalados
  - name: 'gcr.io/cloud-builders/docker'
    id: 'List Installed Packages'
    args:
      - 'run'
      - '--rm'
      - 'my-backend-builder:latest'
      - 'pip'
      - 'list'
    dir: 'backend'

  # 3. Ejecutar las pruebas unitarias dentro de la imagen de la etapa 'builder'.
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Run Unit Tests'
    args:
      - 'run'
      - '--rm'
      - '-e'
      - 'PYTHONPATH=/app/app'
      - 'my-backend-builder:latest'
      - 'python'
      - '-m'
      - 'pytest'
    dir: 'backend'

  # --- Si los tests pasan, Cloud Build continúa con la compilación para el despliegue. ---

  # 4. Construir la imagen de Docker final para el despliegue.
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build Final Docker Image'
    args:
      - 'build'
      - '--no-cache'
      - '-t'
      - '${_AR_HOSTNAME}/${_AR_PROJECT_ID}/${_AR_REPOSITORY}/${REPO_NAME}/${_SERVICE_NAME}:${SHORT_SHA}'
      - '.'
    dir: 'backend'

  # 5. Empujar la imagen final a Artifact Registry.
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Push Final Docker Image'
    args:
      - 'push'
      - '${_AR_HOSTNAME}/${_AR_PROJECT_ID}/${_AR_REPOSITORY}/${REPO_NAME}/${_SERVICE_NAME}:${SHORT_SHA}'
    dir: 'backend'

  # 6. Desplegar la nueva versión del servicio de Cloud Run.
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Deploy to Cloud Run Production'
    entrypoint: gcloud
    args:
      - 'run'
      - 'services'
      - 'update'
      - '${_SERVICE_NAME}'
      - '--platform=managed'
      - '--image=${_AR_HOSTNAME}/${_AR_PROJECT_ID}/${_AR_REPOSITORY}/${REPO_NAME}/${_SERVICE_NAME}:${SHORT_SHA}'
      - '--region=${_DEPLOY_REGION}'
      - '--labels=managed-by=cloud-build,commit-sha=${SHORT_SHA},gcb-build-id=${BUILD_ID},env=prod'
      - '--quiet'

# Lista de imágenes a construir
images:
  - '${_AR_HOSTNAME}/${_AR_PROJECT_ID}/${_AR_REPOSITORY}/${REPO_NAME}/${_SERVICE_NAME}:${SHORT_SHA}'

# Opciones adicionales y sustituciones
options:
  substitutionOption: ALLOW_LOOSE
  logging: CLOUD_LOGGING_ONLY

substitutions:
  _DEPLOY_REGION: 'us-central1'
  _AR_HOSTNAME: 'us-central1-docker.pkg.dev'
  _AR_REPOSITORY: 'cloud-run-source-deploy'
  _AR_PROJECT_ID: 'memorybook-476116'
  _SERVICE_NAME: 'memorybook-api'
  REPO_NAME: 'memorybook'

tags:
  - 'gcp-cloud-build-deploy-cloud-run'
  - 'gcp-cloud-build-deploy-cloud-run-managed'
  - 'memorybook-api'
